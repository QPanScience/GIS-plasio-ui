# deploy.sh
# Setup a deploy directory for the build
#

echo ":: going to setup a deploy directory and re-fill it."
read

CWD=`pwd`
DEPLOY_DIR=$PWD/deploy

if [ -d "$DEPLOY_DIR" ] ; then
    rm -rf $DEPLOY_DIR
fi


mkdir $DEPLOY_DIR

echo ":: cleaning current build..."
lein clean

echo ":: performing a release build..."
lein cljsbuild once min

echo ":: staging resources..."
cp -R "$CWD/resources/public/." $DEPLOY_DIR/

ID=`uuidgen`

echo ":: build id is: $ID, applying..."
mv $DEPLOY_DIR/css/style.css $DEPLOY_DIR/css/style-$ID.css
mv $DEPLOY_DIR/js/compiled/plasio_ui.js $DEPLOY_DIR/js/compiled/plasio_ui-$ID.js
mv $DEPLOY_DIR/js/plasio-renderer.js $DEPLOY_DIR/js/plasio-renderer-$ID.js
mv $DEPLOY_DIR/lib/dist/plasio-lib.js $DEPLOY_DIR/lib/dist/plasio-lib-$ID.js
mv $DEPLOY_DIR/config.json $DEPLOY_DIR/config-$ID.json

sed -i.bak -e "s/style\.css/style-$ID\.css/g ; s/plasio_ui\.js/plasio_ui-$ID\.js/g ; s/plasio-renderer\.js/plasio-renderer-$ID\.js/g ; s/plasio-lib\.js/plasio-lib-$ID\.js/g ; s/BuildID = \"\"/BuildID = \"$ID\"/g" $DEPLOY_DIR/index.html

echo ":: done."

